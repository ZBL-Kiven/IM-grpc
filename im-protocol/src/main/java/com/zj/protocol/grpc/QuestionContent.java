// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_api.proto

package com.zj.protocol.grpc;

/**
 * Protobuf type {@code app.QuestionContent}
 */
public  final class QuestionContent extends
    com.google.protobuf.GeneratedMessageLite<
        QuestionContent, QuestionContent.Builder> implements
    // @@protoc_insertion_point(message_implements:app.QuestionContent)
    QuestionContentOrBuilder {
  private QuestionContent() {
  }
  public static final int TEXTCONTENT_FIELD_NUMBER = 1;
  private TextContent textContent_;
  /**
   * <code>optional .app.TextContent textContent = 1;</code>
   */
  public boolean hasTextContent() {
    return textContent_ != null;
  }
  /**
   * <code>optional .app.TextContent textContent = 1;</code>
   */
  public TextContent getTextContent() {
    return textContent_ == null ? TextContent.getDefaultInstance() : textContent_;
  }
  /**
   * <code>optional .app.TextContent textContent = 1;</code>
   */
  private void setTextContent(TextContent value) {
    if (value == null) {
      throw new NullPointerException();
    }
    textContent_ = value;
    
    }
  /**
   * <code>optional .app.TextContent textContent = 1;</code>
   */
  private void setTextContent(
      TextContent.Builder builderForValue) {
    textContent_ = builderForValue.build();
    
  }
  /**
   * <code>optional .app.TextContent textContent = 1;</code>
   */
  private void mergeTextContent(TextContent value) {
    if (textContent_ != null &&
        textContent_ != TextContent.getDefaultInstance()) {
      textContent_ =
        TextContent.newBuilder(textContent_).mergeFrom(value).buildPartial();
    } else {
      textContent_ = value;
    }
    
  }
  /**
   * <code>optional .app.TextContent textContent = 1;</code>
   */
  private void clearTextContent() {  textContent_ = null;
    
  }

  public static final int QUESTIONSTATUS_FIELD_NUMBER = 2;
  private int questionStatus_;
  /**
   * <code>optional uint32 questionStatus = 2;</code>
   */
  public int getQuestionStatus() {
    return questionStatus_;
  }
  /**
   * <code>optional uint32 questionStatus = 2;</code>
   */
  private void setQuestionStatus(int value) {
    
    questionStatus_ = value;
  }
  /**
   * <code>optional uint32 questionStatus = 2;</code>
   */
  private void clearQuestionStatus() {
    
    questionStatus_ = 0;
  }

  public static final int QUESTIONID_FIELD_NUMBER = 3;
  private long questionId_;
  /**
   * <code>optional uint64 questionId = 3;</code>
   */
  public long getQuestionId() {
    return questionId_;
  }
  /**
   * <code>optional uint64 questionId = 3;</code>
   */
  private void setQuestionId(long value) {
    
    questionId_ = value;
  }
  /**
   * <code>optional uint64 questionId = 3;</code>
   */
  private void clearQuestionId() {
    
    questionId_ = 0L;
  }

  public static final int SPARK_FIELD_NUMBER = 4;
  private long spark_;
  /**
   * <code>optional uint64 spark = 4;</code>
   */
  public long getSpark() {
    return spark_;
  }
  /**
   * <code>optional uint64 spark = 4;</code>
   */
  private void setSpark(long value) {
    
    spark_ = value;
  }
  /**
   * <code>optional uint64 spark = 4;</code>
   */
  private void clearSpark() {
    
    spark_ = 0L;
  }

  public static final int ISPUBLIC_FIELD_NUMBER = 5;
  private boolean isPublic_;
  /**
   * <code>optional bool isPublic = 5;</code>
   */
  public boolean getIsPublic() {
    return isPublic_;
  }
  /**
   * <code>optional bool isPublic = 5;</code>
   */
  private void setIsPublic(boolean value) {
    
    isPublic_ = value;
  }
  /**
   * <code>optional bool isPublic = 5;</code>
   */
  private void clearIsPublic() {
    
    isPublic_ = false;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (textContent_ != null) {
      output.writeMessage(1, getTextContent());
    }
    if (questionStatus_ != 0) {
      output.writeUInt32(2, questionStatus_);
    }
    if (questionId_ != 0L) {
      output.writeUInt64(3, questionId_);
    }
    if (spark_ != 0L) {
      output.writeUInt64(4, spark_);
    }
    if (isPublic_ != false) {
      output.writeBool(5, isPublic_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;

    size = 0;
    if (textContent_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getTextContent());
    }
    if (questionStatus_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(2, questionStatus_);
    }
    if (questionId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(3, questionId_);
    }
    if (spark_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt64Size(4, spark_);
    }
    if (isPublic_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(5, isPublic_);
    }
    memoizedSerializedSize = size;
    return size;
  }

  public static QuestionContent parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static QuestionContent parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static QuestionContent parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static QuestionContent parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static QuestionContent parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static QuestionContent parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static QuestionContent parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static QuestionContent parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static QuestionContent parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static QuestionContent parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(QuestionContent prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  /**
   * Protobuf type {@code app.QuestionContent}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<QuestionContent, Builder> implements
      // @@protoc_insertion_point(builder_implements:app.QuestionContent)
          QuestionContentOrBuilder {
    // Construct using com.zj.protocol.grpc.QuestionContent.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }


    /**
     * <code>optional .app.TextContent textContent = 1;</code>
     */
    public boolean hasTextContent() {
      return instance.hasTextContent();
    }
    /**
     * <code>optional .app.TextContent textContent = 1;</code>
     */
    public TextContent getTextContent() {
      return instance.getTextContent();
    }
    /**
     * <code>optional .app.TextContent textContent = 1;</code>
     */
    public Builder setTextContent(TextContent value) {
      copyOnWrite();
      instance.setTextContent(value);
      return this;
      }
    /**
     * <code>optional .app.TextContent textContent = 1;</code>
     */
    public Builder setTextContent(
        TextContent.Builder builderForValue) {
      copyOnWrite();
      instance.setTextContent(builderForValue);
      return this;
    }
    /**
     * <code>optional .app.TextContent textContent = 1;</code>
     */
    public Builder mergeTextContent(TextContent value) {
      copyOnWrite();
      instance.mergeTextContent(value);
      return this;
    }
    /**
     * <code>optional .app.TextContent textContent = 1;</code>
     */
    public Builder clearTextContent() {  copyOnWrite();
      instance.clearTextContent();
      return this;
    }

    /**
     * <code>optional uint32 questionStatus = 2;</code>
     */
    public int getQuestionStatus() {
      return instance.getQuestionStatus();
    }
    /**
     * <code>optional uint32 questionStatus = 2;</code>
     */
    public Builder setQuestionStatus(int value) {
      copyOnWrite();
      instance.setQuestionStatus(value);
      return this;
    }
    /**
     * <code>optional uint32 questionStatus = 2;</code>
     */
    public Builder clearQuestionStatus() {
      copyOnWrite();
      instance.clearQuestionStatus();
      return this;
    }

    /**
     * <code>optional uint64 questionId = 3;</code>
     */
    public long getQuestionId() {
      return instance.getQuestionId();
    }
    /**
     * <code>optional uint64 questionId = 3;</code>
     */
    public Builder setQuestionId(long value) {
      copyOnWrite();
      instance.setQuestionId(value);
      return this;
    }
    /**
     * <code>optional uint64 questionId = 3;</code>
     */
    public Builder clearQuestionId() {
      copyOnWrite();
      instance.clearQuestionId();
      return this;
    }

    /**
     * <code>optional uint64 spark = 4;</code>
     */
    public long getSpark() {
      return instance.getSpark();
    }
    /**
     * <code>optional uint64 spark = 4;</code>
     */
    public Builder setSpark(long value) {
      copyOnWrite();
      instance.setSpark(value);
      return this;
    }
    /**
     * <code>optional uint64 spark = 4;</code>
     */
    public Builder clearSpark() {
      copyOnWrite();
      instance.clearSpark();
      return this;
    }

    /**
     * <code>optional bool isPublic = 5;</code>
     */
    public boolean getIsPublic() {
      return instance.getIsPublic();
    }
    /**
     * <code>optional bool isPublic = 5;</code>
     */
    public Builder setIsPublic(boolean value) {
      copyOnWrite();
      instance.setIsPublic(value);
      return this;
    }
    /**
     * <code>optional bool isPublic = 5;</code>
     */
    public Builder clearIsPublic() {
      copyOnWrite();
      instance.clearIsPublic();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:app.QuestionContent)
  }
  protected final Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      Object arg0, Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new QuestionContent();
      }
      case IS_INITIALIZED: {
        return DEFAULT_INSTANCE;
      }
      case MAKE_IMMUTABLE: {
        return null;
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case VISIT: {
        Visitor visitor = (Visitor) arg0;
        QuestionContent other = (QuestionContent) arg1;
        textContent_ = visitor.visitMessage(textContent_, other.textContent_);
        questionStatus_ = visitor.visitInt(questionStatus_ != 0, questionStatus_,
            other.questionStatus_ != 0, other.questionStatus_);
        questionId_ = visitor.visitLong(questionId_ != 0L, questionId_,
            other.questionId_ != 0L, other.questionId_);
        spark_ = visitor.visitLong(spark_ != 0L, spark_,
            other.spark_ != 0L, other.spark_);
        isPublic_ = visitor.visitBoolean(isPublic_ != false, isPublic_,
            other.isPublic_ != false, other.isPublic_);
        if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
            .INSTANCE) {
        }
        return this;
      }
      case MERGE_FROM_STREAM: {
        com.google.protobuf.CodedInputStream input =
            (com.google.protobuf.CodedInputStream) arg0;
        com.google.protobuf.ExtensionRegistryLite extensionRegistry =
            (com.google.protobuf.ExtensionRegistryLite) arg1;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                TextContent.Builder subBuilder = null;
                if (textContent_ != null) {
                  subBuilder = textContent_.toBuilder();
                }
                textContent_ = input.readMessage(TextContent.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(textContent_);
                  textContent_ = subBuilder.buildPartial();
                }

                break;
              }
              case 16: {

                questionStatus_ = input.readUInt32();
                break;
              }
              case 24: {

                questionId_ = input.readUInt64();
                break;
              }
              case 32: {

                spark_ = input.readUInt64();
                break;
              }
              case 40: {

                isPublic_ = input.readBool();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw new RuntimeException(e.setUnfinishedMessage(this));
        } catch (java.io.IOException e) {
          throw new RuntimeException(
              new com.google.protobuf.InvalidProtocolBufferException(
                  e.getMessage()).setUnfinishedMessage(this));
        } finally {
        }
      }
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        if (PARSER == null) {    synchronized (QuestionContent.class) {
            if (PARSER == null) {
              PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
            }
          }
        }
        return PARSER;
      }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:app.QuestionContent)
  private static final QuestionContent DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new QuestionContent();
    DEFAULT_INSTANCE.makeImmutable();
  }

  public static QuestionContent getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<QuestionContent> PARSER;

  public static com.google.protobuf.Parser<QuestionContent> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

