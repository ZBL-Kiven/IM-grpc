syntax = "proto3";

package app;

option java_multiple_files = true;
option java_package = "com.zj.im.gen";
option java_outer_classname = "IMProtoc";

message ListenTopicReq{

  repeated string topic  = 1;

  Method          method = 2;

  enum Method{
    Subscribe   = 0;
    UnSubscribe = 1;
  }
}

message ListenTopicReply{
  string topic = 1;
  string data  = 2;
}

message ImMessage{
  uint64              groupId         = 1;
  uint64              ownerId         = 2;
  uint64              sendTime        = 3;
  uint64              msgId           = 4;
  string              clientMsgId     = 5;
  string              msgType         = 6;
  ImgContent          imgContent      = 7;
  VideoContent        videoContent    = 8;
  TextContent         textContent     = 9;
  AudioContent        audioContent    = 10;
  CCVideoContent      ccVideoContent  = 11;
  QuestionContent     questionContent = 12;
  SenderInfo          sender          = 13;
  uint64              replyMsgId      = 14;
  ImMessage           replyMsg        = 15;
  int32               status          = 16;
  LiveContent         liveContent     = 17;
  map<string, string> extContent      = 18;
  EmotionMessage      emotionMessage  = 19;
  GiftMessage         giftMessage     = 20;
}

message EmotionMessage{
  uint32 id        = 1;
  uint32 emotionId = 2;
  string icon      = 3;
  string url       = 4;
}

message GiftMessage{
  uint32        giftId          = 1;
  string        giftImage       = 2;
  MultiLanguage multiLanguage   = 3;
  uint32        amount          = 4;
  string        bundle          = 5;
  string        receiveUserName = 6;
  uint32        receiveUserId   = 7;
}

message MultiLanguage{
  string area = 1;
  string name = 2;
}

message ImgContent{
  string url    = 1;
  uint32 height = 2;
  uint32 width  = 3;
}

message VideoContent{
  string url      = 1;
  uint64 duration = 4;
  uint32 height   = 5;
  uint32 width    = 6;
}

message TextContent{
  string text = 1;
}

message AudioContent{
  string url      = 1;
  uint64 duration = 2;
}

message CCVideoContent{
  string videoId                    = 1;
  string videoTitle                 = 2;
  string videoDescribe              = 3;
  double duration                   = 4;
  uint32 width                      = 5;
  uint32 height                     = 6;
  string imgPreviewRemoteStorageUrl = 7;
}

message QuestionContent{
  TextContent textContent    = 1;
  uint32      questionStatus = 2;
  uint64      questionId     = 3;
  uint64      spark          = 4;
  uint64      diamond        = 5;
  bool        published      = 6;
  uint64      sendTime       = 7;
  uint64      expireTime     = 8;
  string      answerMsgType  = 9;
  string      contentType    = 10;
}

message LiveContent{
  uint64 id        = 1;
  bool   status    = 2;
  uint32 roomId    = 3;
  string name      = 4;
  string area      = 5;
  string introduce = 6;
  string cover     = 7;
  uint32 userId    = 8;
  string channelId = 9;
}

message SenderInfo{
  uint64 senderId       = 1;
  string senderName     = 2;
  string senderAvatar   = 3;
  string senderPlatform = 4;
  string senderGender   = 5;
}

message LeaveImGroupReq {
  uint64          groupId      = 1;
  uint64          ownerId      = 2;
  /*owner_clap_house,owner_message,owner_private,fans_clap_house,fans_message,fans_private*/
  repeated string channel      = 3;
  /* fans user id*/
  uint64          targetUserid = 4;
}

message LeaveImGroupReply {
  bool success = 1;
}

message PingReq{
}

message Pong{
}

message ImMessageReq {
  enum Op{
    JOIN  = 0;
    LEAVE = 1;
  }
  Op     op           = 1;
  uint64 groupId      = 2;
  uint64 ownerId      = 3;
  uint64 targetUserId = 4;
  string channel      = 5;
  string seq          = 6;
}

message ImMessageReply{

  /**
   * 0 代表是消息 1 代表是服务器收到请求的回执
   */
  int32      type       = 3;
  ImMessage  imMessage  = 1;
  ReqContext reqContext = 2;

  message ReqContext{
    uint64 groupId      = 2;
    uint64 ownerId      = 3;
    uint64 targetUserId = 4;
    string channel      = 5;
    string seq          = 6;
  }
}

message LiveRoomMessageReq {
  enum Op{
    JOIN  = 0;
    LEAVE = 1;
  }
  Op     op        = 1;
  int32  roomId    = 2;
  int64  liveId    = 3;
  bool   liverIsMe = 4;
  uint64 userId    = 5;
}

message LiveRoomMessageReply{
  int32  roomId  = 1;
  int64  liveId  = 2;
  string msgType = 3;
  string content = 4;
}

service MsgApi{

  rpc ListenTopicData(stream ListenTopicReq) returns (stream ListenTopicReply){}

  rpc LeaveImGroup(LeaveImGroupReq) returns (LeaveImGroupReply){}

  rpc LiveRoomMessage(stream LiveRoomMessageReq) returns (stream LiveRoomMessageReply){}

  rpc Ping(PingReq) returns (Pong){}

  rpc OnlineImMessage(stream ImMessageReq) returns (stream ImMessageReply){}
}
